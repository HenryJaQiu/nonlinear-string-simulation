# -*- coding: utf-8 -*-
"""stringSimu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V6JpH4TpceSezlTDoi1zZjRGxlxgc9b1
"""

import numpy as np
import matplotlib.pyplot as plt
import math

def cateI(ab,x):
  #Σ{a_i}*{e^{b_i*x}}
  y = ab[0][0]*pow(math.e,ab[0][1]*x) + ab[1][0]*pow(math.e,ab[1][1]*x)
  return y

x1 = np.arange(0,1,0.05)

#kidney
ab1 = [[102.7,2.666],[-105.8,-1.483]]
ab2 = [[81.96,2.949],[-84.93,-2.971]]
ab3 = [[77.98,3.15],[-79.32,-2.447]]

y1 = cateI(ab1,x1)
y2 = cateI(ab2,x1)
y3 = cateI(ab3,x1)

plt.plot(x1,y1,label='Kidney sample1')
plt.plot(x1,y2,label='Kidney sample2')
plt.plot(x1,y3,label='Kidney sample3')
plt.legend()
plt.show()

x2 = np.arange(0,0.5,0.05)

#breast
ab1 = [[1926,1.399],[-1926,1.393]]
ab2 = [[1.67,3.843],[-1.685,-1.844]]
ab3 = [[7.355,4.829],[-7.183,-8.368]]

y1 = cateI(ab1,x1)
y2 = cateI(ab2,x1)
y3 = cateI(ab3,x1)

plt.plot(x1,y1,label='Breast sample1')
plt.plot(x1,y2,label='Breast sample2')
plt.plot(x1,y3,label='Breast sample3')
plt.legend()
plt.show()

def cateII(abc,x):
  y = abc[0][0]*pow(math.e,-pow((abc[0][1]-x)/abc[0][2],2)) + abc[1][0]*pow(math.e,-pow((abc[1][1]-x)/abc[1][2],2)) 
  return y

x1 = np.arange(0,3.5,0.25)

#heel-pad
abc1 = [[2637000,6.508,1.82],[875300,5.566,2.28]]
abc2 = [[432800,4.233,0.59],[680800,7.238,2.978]]
abc3 = [[229400,3.499,0.234],[1792000,4.468,1.431]]

#Σ{a_i}*{e^(-{b_i-x}/{c_i})}
y1 = cateII(abc1,x1)
y2 = cateII(abc2,x1)
y3 = cateII(abc3,x1)

plt.plot(x1,y1,label='Heel Pad sample1')
plt.plot(x1,y2,label='Heel Pad sample2')
plt.plot(x1,y3,label='Heel Pad sample3')
plt.legend()
plt.show()

x2 = np.arange(0,22,1)

#liver
abc1 = [[937.3,23.73,1.955],[998,28.16,10.35]]
abc2 = [[6693.3,29.51,6.251],[905.9,29.01,14.58]]
abc3 = [[1473,24.67,4.081],[1822,36.63,17.27]]

y1 = cateII(abc1,x2)
y2 = cateII(abc2,x2)
y3 = cateII(abc3,x2)

plt.plot(x2,y1,label='Liver sample1')
plt.plot(x2,y2,label='Liver sample2')
plt.plot(x2,y3,label='Liver sample3')
plt.legend()
plt.show()



"""In 'Modeling and Prediction of Soft Tissue Directional Stiffness using In-Vitro Force-Displacement Data', the nonlinear relationship between force and displacement of soft tissues is proposed.

In addition, soft tissues can be divided into different categories based on physical properties and force-displacement or stress-strain configurations. 

To minimize the error in the simulation of soft tissue deformation, a nonlinear model with sufficient generalization ability is necessary in VR surgery.



"""